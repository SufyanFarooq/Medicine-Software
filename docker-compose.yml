# Universal Business Management System - Docker Compose
# Complete deployment with MongoDB, Redis, and Nginx

version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:6.0
    container_name: ubms-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: secure_password_123
      MONGO_INITDB_DATABASE: ubms
    volumes:
      - mongodb_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    ports:
      - "27017:27017"
    networks:
      - ubms-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache (for future use)
  redis:
    image: redis:7-alpine
    container_name: ubms-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass redis_password_123
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - ubms-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Universal Business Management System
  ubms:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ubms-app
    restart: unless-stopped
    environment:
      NODE_ENV: production
      MONGODB_URI: mongodb://admin:secure_password_123@mongodb:27017/ubms?authSource=admin
      REDIS_URL: redis://:redis_password_123@redis:6379
      JWT_SECRET: your_super_secure_jwt_secret_here
      PORT: 3000
      HOSTNAME: 0.0.0.0
    volumes:
      - ./uploads:/app/uploads
      - ./backups:/app/backups
      - ./logs:/app/logs
    ports:
      - "3000:3000"
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - ubms-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: ubms-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./nginx/logs:/var/log/nginx
    depends_on:
      ubms:
        condition: service_healthy
    networks:
      - ubms-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/nginx_status"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backup Service (optional)
  backup:
    image: mongo:6.0
    container_name: ubms-backup
    restart: "no"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: secure_password_123
    volumes:
      - ./backups:/backups
      - ./scripts/backup.sh:/backup.sh:ro
    command: ["/bin/sh", "/backup.sh"]
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - ubms-network
    profiles:
      - backup

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  ubms-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# Health check for all services
x-healthcheck: &healthcheck
  test: ["CMD", "echo", "Service is healthy"]
  interval: 30s
  timeout: 10s
  retries: 3
  start_period: 40s
